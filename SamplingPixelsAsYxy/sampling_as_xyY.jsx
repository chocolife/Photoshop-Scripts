#target Photoshopvar samplingPixelsAsYxy = {		'tristimulus_values': {		/* 2 degrees */		'ccTA_2': [109.850, 100.000, 35.585],		'ccTC_2': [98.074,  100.000, 118.232],		'D50_2': [96.422,  100.000, 82.521],		'D55_2': [95.682,  100.000, 92.149],		'D65_2': [95.047,  100.000, 108.883],		'D75_2': [94.972,  100.000, 122.638],		'F2_2': [99.187,  100.000, 67.395],		'F7_2': [95.044,  100.000, 108.755],		'F11_2': [100.966, 100.000, 64.370],		/* 10 degrees */		'A_10': [111.144, 100.000, 35.200],		'C_10': [97.285,  100.000, 116.145],		'D50_10': [96.720,  100.000, 81.427],		'D55_10': [95.799,  100.000, 90.926],		'D65_10': [94.811,  100.000, 107.304],		'D75_10': [94.416,  100.000, 120.641],		'F2_10': [103.280, 100.000, 69.026],		'F7_10': [95.792,  100.000, 107.687],		'F11_10': [103.866, 100.000, 65.627],			/* PCS illuminant of AdobeRGB & sRGB profiles */		'PCS_illuminant': [96.420, 100.000, 82.491],				/* reference white in xyY coordinates */		'chromaD65': [0.3127, 0.3290, 100.0]	},	'convertCIELabToXYZ': function(L, a, b) {		var ref = this.tristimulus_values['PCS_illuminant'];ã€€//tristimulus of reference white		var X, Y, Z;				/* via http://www.cs.rit.edu/~ncs/color/API_JAVA/XYZSet.java		var frac = (L + 16) / 116;		if ( L < 7.9996 ) {			Y = L / 903.3;			X = a / 3893.5 + Y;			Z = Y - b / 1557.4;		} else {			var tmp = frac + a / 500;			X = tmp * tmp * tmp * ref[0];			Y = frac * frac * frac * ref[1];			tmp = frac - b / 200;			Z = tmp * tmp * tmp * ref[2];		}		*/				/* via http://www.tecgraf.puc-rio.br/~mgattass/color/CIELabtoXYZ.htm */		var var_Y = ( L + 16 ) / 116;		var var_X = a / 500 + var_Y;		var var_Z = var_Y - b / 200;		var_Y = Math.pow(var_Y, 3) > 0.008856 ? Math.pow(var_Y, 3) : ( var_Y - 16 / 116 ) / 7.787;		var_X = Math.pow(var_X, 3) > 0.008856 ? Math.pow(var_X, 3) : ( var_X - 16 / 116 ) / 7.787;		var_Z = Math.pow(var_Z, 3) > 0.008856 ? Math.pow(var_Z, 3) : ( var_Z - 16 / 116 ) / 7.787;		X = var_X * ref[0];		Y = var_Y * ref[1];		Z = var_Z * ref[2];		//		return [X, Y, Z];	},	'main': function() {		var t = new Date();		var outputFile = '~/Desktop/xy_colors_64x64.txt';		var sampling_size = 64;		//var threshold = 10;		var sampling_data = '';		var ru = app.preferences.rulerUnits;		app.preferences.rulerUnits = Units.PIXELS;		var doc = app.activeDocument;		doc.flatten();		doc.resizeImage(sampling_size, sampling_size, 72, ResampleMethod.BICUBIC);		//doc.resizeImage(sampling_size*2, sampling_size*2, 72, ResampleMethod.NEARESTNEIGHBOR);				var smpl = doc.colorSamplers.add([0, 0]);		var col = new SolidColor();		var Yxy_x, Yxy_y;		var XYZ = [];		var X, Y, Z;		for (var i=0; i<sampling_size; i++) {			for (var j=0; j<sampling_size; j++) {				smpl.move([j+0.5, i+0.5]);				col = smpl.color;				XYZ = this.convertCIELabToXYZ(col.lab.l, col.lab.a, col.lab.b);				X = XYZ[0]; Y = XYZ[1]; Z = XYZ[2];				Yxy_x = X / ( X + Y + Z );				Yxy_y = Y / ( X + Y + Z );				if (Y > 1) { sampling_data += Yxy_x + '\t' + Yxy_y + '\r'; }			}		}				var f = new File(outputFile);  		if (f.open("w")) {  			f.encoding = 'BINARY';  			f.write(sampling_data);			f.close();		}		app.preferences.rulerUnits = ru;		var now = new Date();		alert('Finished!   time: ' + (now - t));	}}if (app.documents.length > 0) {	samplingPixelsAsYxy.main();}